name: AWS Prod Docker Deployment
on: 
  push: 
    branches: [ "main" ]

# Don't allow concurrent deploys on a branch
concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: false

jobs:
  Cypress-Test:
   
  
    name: Build Docker Image
    runs-on: ubuntu-latest  
    steps:  
        - name: Checkout
          uses: actions/checkout@v2    
          
        - name: Setup AWS ECR Details
          uses: aws-actions/configure-aws-credentials@v1
          with:
            aws-access-key-id: ${{ secrets.ACCESS_KEY }}
            aws-secret-access-key: ${{ secrets.SECRET_KEY }}
            aws-region: ${{secrets.AWS_REGION}}


        - name: Login to Amazon ECR
          id: login-pf-aws-ecr
          uses: aws-actions/amazon-ecr-login@v1
          

        - name: Build and push the tagged docker image to Amazon ECR
          env:
            ECR_REGISTRY: ${{ steps.login-pf-aws-ecr.outputs.registry }}
            ECR_REPOSITORY: ${{secrets.AWS_ECR_REPO}}
            IMAGE_TAG: latest
          run: |
            docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG --build-arg SQS_QUEUE_URL_DS=${{secrets.SQS_QUEUE_URL_DS}} --build-arg SQS_QUEUE_URL_UI=${{secrets.SQS_QUEUE_URL_UI}} --build-arg SQS_QUEUE_URL_BE=${{secrets.SQS_QUEUE_URL_BE}} --build-arg SQS_QUEUE_URL_FE=${{secrets.SQS_QUEUE_URL_FE}} --build-arg SQS_QUEUE_URL_PM=${{secrets.SQS_QUEUE_URL_PM}} --build-arg SQS_QUEUE_URL=${{secrets.SQS_QUEUE_URL}} --build-arg ACCESS_KEY=${{secrets.ACCESS_KEY}} --build-arg SECRET_KEY=${{secrets.SECRET_KEY}} --build-arg ENVIRONMENT=production .
            docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

        - name: Update lambda function code github_run_id:${{ github.run_id }}
          env:
            ECR_REGISTRY: ${{ steps.login-pf-aws-ecr.outputs.registry }}
            ECR_REPOSITORY: ${{secrets.AWS_ECR_REPO}}
            IMAGE_TAG: latest
          run: aws lambda update-function-code --function-name klusterthon-model --image-uri $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG 

        - name: Sleep for 50 seconds
          run: sleep 50s
          shell: bash

        - name: Release lambda function version
          run: aws lambda publish-version --function-name klusterthon-model --description ${{ github.run_id }}    

